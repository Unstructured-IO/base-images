name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REPOSITORY: quay.io/unstructured-io
  DOCKER_IMAGE: base-images


jobs:
  publish-images:
    strategy:
      matrix:
        images: ["rocky8.7-3", "rocky9.2-1"]
    runs-on: ubuntu-latest
#    needs: [build-images]
    steps:
    - uses: docker/setup-buildx-action@v1
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Login to Quay.io
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_IO_ROBOT_USERNAME }}
        password: ${{ secrets.QUAY_IO_ROBOT_TOKEN }}
    - name: Pull AMD image
      run: |
        docker pull --platform linux/amd64 $DOCKER_REPOSITORY/$DOCKER_IMAGE:${{ matrix.images }}-amd64
        docker tag $DOCKER_REPOSITORY/$DOCKER_IMAGE:${{ matrix.images }}-amd64 unstructured-io/$DOCKER_IMAGE:${{ matrix.images }}-amd64
    - name: Pull ARM image
      run: |
        docker pull --platform linux/arm64 $DOCKER_REPOSITORY/$DOCKER_IMAGE:${{ matrix.images }}-arm64
        docker tag $DOCKER_REPOSITORY/$DOCKER_IMAGE:${{ matrix.images }}-arm64 unstructured-io/$DOCKER_IMAGE:${{ matrix.images }}-arm64
    - name: Push multiarch manifest
      run: |
        docker manifest create $DOCKER_REPOSITORY/$DOCKER_IMAGE:${{ matrix.images }} unstructured-io/$DOCKER_IMAGE:${{ matrix.images }}-amd64 unstructured-io/$DOCKER_IMAGE:${{ matrix.images }}-arm64
        docker manifest push unstructured-io/$DOCKER_IMAGE:${{ matrix.images }}

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
